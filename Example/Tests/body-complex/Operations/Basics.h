/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

#import <AzureClientRuntime/AzureClientRuntime.h>
#import "../Models/Basic.h"
@class OperationError;

/**
 * An protocol provides access to all Basics operations
 */
@protocol BasicsProtocol

    /**
     * Get complex type {id: 2, name: 'abc', color: 'YELLOW'}.
     *
     * @param callback A block where Basic is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getValidWithCallback : (void(^)(Basic*, OperationError*)) callback;

    /**
     * Please put {id: 2, name: 'abc', color: 'Magenta'}.
     *
     * @param complexBody Please put {id: 2, name: 'abc', color: 'Magenta'}
     * @param callback A block where OperationError is nil if the operation is successful
     * @throws IllegalArgumentException if a required parameter is not provided.
     */
    - (void) putValidWithComplexBody : (Basic *) complexBody withCallback : (void(^)(OperationError*)) callback;

    /**
     * Get a basic complex type that is invalid for the local strong type.
     *
     * @param callback A block where Basic is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getInvalidWithCallback : (void(^)(Basic*, OperationError*)) callback;

    /**
     * Get a basic complex type that is empty.
     *
     * @param callback A block where Basic is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getEmptyWithCallback : (void(^)(Basic*, OperationError*)) callback;

    /**
     * Get a basic complex type whose properties are null.
     *
     * @param callback A block where Basic is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getNullWithCallback : (void(^)(Basic*, OperationError*)) callback;

    /**
     * Get a basic complex type while the server doesn't provide a response payload.
     *
     * @param callback A block where Basic is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getNotProvidedWithCallback : (void(^)(Basic*, OperationError*)) callback;

@end

/**
* The protocol implementation
*/
@class AutoRestComplexTestService;

@interface Basics : NSObject <BasicsProtocol>
@property (readonly) AutoRestComplexTestService* service;
- (instancetype) initWithService: (AutoRestComplexTestService *) service;
@end
