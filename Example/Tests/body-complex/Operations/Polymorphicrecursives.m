/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

#import "Polymorphicrecursives.h"
#import "Error.h"
#import "../AutoRestComplexTestService.h"

/**
 * The protocol PolymorphicrecursivesProtocol implementation
 */
@implementation Polymorphicrecursives

    - (instancetype) initWithService: (AutoRestComplexTestService *) service {
        if (self = [super init]) {
            _service = service;
        }

        return self;
    }

    /**
     * Get complex types that are polymorphic and have recursive references.
    *
     * @param callback A block where Fish is a result object and OperationError is nil, if the operation is successful
     */
    - (void) getValidWithCallback : (void(^)(Fish*, OperationError*)) callback {


        NSString* __url = [RequestHelper buildUrl: self.service.DEFAULT_BASE_URL
                                         withPath: @"/complex/polymorphicrecursive/valid"
                                   withPathParams: @{}
                                  withQueryParams: @{}];

        RequestParameters* __rp = [RequestParameters createWithUrl: __url
                                                        withMethod: @"GET"
                                                       withHeaders: @{@"Content-Type" : @"application/json; charset=utf-8"}
                                                          withBody: nil];

        [RequestHelper executeRequest:__rp
                    withResponseClass:[Fish class]
                       withErrorClass:[Error class]
                         withCallback:^(id _Nullable result, OperationError* _Nullable error) {
            callback(result, error);
        }];

    }


    /**
     * Put complex types that are polymorphic and have recursive references.
    *
     * @param complexBody Please put a salmon that looks like this:
 {
     "fishtype": "salmon",
     "species": "king",
     "length": 1,
     "age": 1,
     "location": "alaska",
     "iswild": true,
     "siblings": [
         {
             "fishtype": "shark",
             "species": "predator",
             "length": 20,
             "age": 6,
             "siblings": [
                 {
                     "fishtype": "salmon",
                     "species": "coho",
                     "length": 2,
                     "age": 2,
                     "location": "atlantic",
                     "iswild": true,
                     "siblings": [
                         {
                             "fishtype": "shark",
                             "species": "predator",
                             "length": 20,
                             "age": 6
                         },
                         {
                             "fishtype": "sawshark",
                             "species": "dangerous",
                             "length": 10,
                             "age": 105
                         }
                     ]
                 },
                 {
                     "fishtype": "sawshark",
                     "species": "dangerous",
                     "length": 10,
                     "age": 105
                 }
             ]
         },
         {
             "fishtype": "sawshark",
             "species": "dangerous",
             "length": 10,
             "age": 105
         }
     ]
 }
     * @param callback A block where OperationError is nil if the operation is successful
     * @throws IllegalArgumentException if a requred parameter is not provided.
     */
    - (void) putValidWithComplexBody : (Fish *) complexBody withCallback : (void(^)(OperationError*)) callback {

        if (complexBody == nil) {
            NSException *e = [NSException
                exceptionWithName: @"IllegalArgumentException"
                reason: @"Parameter complexBody is required and cannot be nil."
                userInfo: nil];
            @throw e;
        }


        NSString* __url = [RequestHelper buildUrl: self.service.DEFAULT_BASE_URL
                                         withPath: @"/complex/polymorphicrecursive/valid"
                                   withPathParams: @{}
                                  withQueryParams: @{}];

        RequestParameters* __rp = [RequestParameters createWithUrl: __url
                                                        withMethod: @"PUT"
                                                       withHeaders: @{@"Content-Type" : @"application/json; charset=utf-8"}
                                                          withBody: [JsonCoder encodeObject:complexBody]];

         [RequestHelper executeRequest:__rp
                        withErrorClass:[Error class]
                          withCallback:^(OperationError* _Nullable error) {
            callback(error);
        }];

    }


@end
