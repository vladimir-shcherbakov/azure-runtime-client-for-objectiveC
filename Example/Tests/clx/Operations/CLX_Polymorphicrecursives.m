/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

#import <AzureClientRuntime/AzureClientRuntime.h>
#import "CLX_Polymorphicrecursives.h"
#import "CLX_Error.h"
#import "CLX_AutoRestComplexTestServiceService.h"

/**
 * The protocol CLX_PolymorphicrecursivesProtocol implementation
 */
@implementation CLX_Polymorphicrecursives

- (instancetype)initWithService:(CLX_AutoRestComplexTestServiceService *)service {
    if (self = [super init]) {
        _service = service;
    }

    return self;
}

/**
 * Get complex types that are polymorphic and have recursive references.
 *
 * @param callback A block where CLX_Fish is a result object and AZOperationError is nil, if the operation is successful
 */
- (void)getValidWithCallback:(void(^)(CLX_Fish*, AZOperationError*))callback {

    NSString* __url = [AZRequestHelper buildUrl:self.service.DEFAULT_BASE_URL
                                       withPath:@"/complex/polymorphicrecursive/valid"
                                 withPathParams:@{}
                                withQueryParams:@{}];
    AZRequestParameters* __rp = [AZRequestParameters createWithUrl:__url
                                                        withMethod:@"GET"
                                                       withHeaders:@{@"Content-Type":@"application/json; charset=utf-8"}
                                                          withBody:nil];
    [__rp withSpecialHeaders:self.service.specialHeaders];
    [AZRequestHelper executeRequest:__rp
                  withResponseClass:[CLX_Fish class]
                     withErrorClass:[CLX_Error class]
                       withCallback:^(id _Nullable result, AZOperationError* _Nullable error) {
        callback(result, error);
    }];
}

/**
 * Put complex types that are polymorphic and have recursive references.
 *
 * @param complexBody Please put a salmon that looks like this:
 {
     "fishtype": "salmon",
     "species": "king",
     "length": 1,
     "age": 1,
     "location": "alaska",
     "iswild": true,
     "siblings": [
         {
             "fishtype": "shark",
             "species": "predator",
             "length": 20,
             "age": 6,
             "siblings": [
                 {
                     "fishtype": "salmon",
                     "species": "coho",
                     "length": 2,
                     "age": 2,
                     "location": "atlantic",
                     "iswild": true,
                     "siblings": [
                         {
                             "fishtype": "shark",
                             "species": "predator",
                             "length": 20,
                             "age": 6
                         },
                         {
                             "fishtype": "sawshark",
                             "species": "dangerous",
                             "length": 10,
                             "age": 105
                         }
                     ]
                 },
                 {
                     "fishtype": "sawshark",
                     "species": "dangerous",
                     "length": 10,
                     "age": 105
                 }
             ]
         },
         {
             "fishtype": "sawshark",
             "species": "dangerous",
             "length": 10,
             "age": 105
         }
     ]
 }
 * @param callback A block where AZOperationError is nil if the operation is successful
 * @throws IllegalArgumentException if a requred parameter is not provided or a rule validation has failed
 */
- (void)putValidWithComplexBody:(CLX_Fish *)complexBody withCallback:(void(^)(AZOperationError*))callback {

    if (complexBody == nil) {
        @throw [NSException
            exceptionWithName: @"IllegalArgumentException"
            reason: @"Parameter 'complexBody' is required and cannot be nil."
            userInfo: nil];
    }
    if (complexBody != nil) {
        //TODO: [complexBody validate];
    }
    NSString* __url = [AZRequestHelper buildUrl:self.service.DEFAULT_BASE_URL
                                       withPath:@"/complex/polymorphicrecursive/valid"
                                 withPathParams:@{}
                                withQueryParams:@{}];
    AZRequestParameters* __rp = [AZRequestParameters createWithUrl:__url
                                                        withMethod:@"PUT"
                                                       withHeaders:@{@"Content-Type":@"application/json; charset=utf-8"}
                                                          withBody:[AZJsonCoder encodeObject:complexBody]];
    [__rp withSpecialHeaders:self.service.specialHeaders];
    [AZRequestHelper executeRequest:__rp
                     withErrorClass:[CLX_Error class]
                       withCallback:^(AZOperationError* _Nullable error) {
        callback(error);
    }];
}

@end
